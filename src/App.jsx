import { useState, useEffect } from "react";
import axios from "axios";
import "./App.css";
import ToDo from "./Tasks";
import ToDoForm from "./AddTask";

const TASKS_STORAGE_KEY = "tasks-list-project-web";
const WEATHER_API_KEY = "e7bc7a3b-708f-42f6-814f-98be2c495763";

function App() {
  const [rates, setRates] = useState({});
  const [weatherData, setWeatherData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á –∏–∑ LocalStorage
  const [todos, setTodos] = useState(() => {
    const storedTasks = localStorage.getItem(TASKS_STORAGE_KEY); // –ß–∏—Ç–∞–µ—Ç –∑–∞–¥–∞—á–∏ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø–æ –∫–ª—é—á—É
    if (storedTasks) {
      try {
        const parsedTasks = JSON.parse(storedTasks); // –ü–∞—Ä—Å–∏—Ç JSON —Å –∑–∞–¥–∞—á–∞–º–∏
        if (Array.isArray(parsedTasks)) {
          return parsedTasks; // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–¥–∞—á–∏
        } else {
          console.warn(
            "–ó–∞–¥–∞—á–∞ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞, –Ω–æ –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:",
            parsedTasks
          );
        }
      } catch (error) {
        console.error(
          "–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∑–∞–¥–∞—á –∏–∑ localStorage:",
          error.message
        );
      }
    }
    return []; // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤, –µ—Å–ª–∏ –Ω–µ—Ç –∑–∞–¥–∞—á
  });

  useEffect(() => {
    async function fetchAllData() {
      try {
        const currencyResponse = await axios.get(
          "https://www.cbr-xml-daily.ru/daily_json.js"
        );

        if (!currencyResponse.data || !currencyResponse.data.Valute) {
          throw new Error("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞–ª—é—Ç–µ.");
        }
        const USDrate = currencyResponse.data.Valute.USD.Value.toFixed(
          4
        ).replace(".", ",");
        const EURrate = currencyResponse.data.Valute.EUR.Value.toFixed(
          4
        ).replace(".", ",");
        setRates({
          USDrate,
          EURrate,
        });
        navigator.geolocation.getCurrentPosition(
          async (position) => {
            const lat = position.coords.latitude;
            const lon = position.coords.longitude;
            const weatherResponse = await axios.get(
              `https://api.weather.yandex.ru/v2/forecast?lat=${lat}&lon=${lon}`,
              {
                headers: {
                  "X-Yandex-Weather-Key": WEATHER_API_KEY,
                },
              }
            );

            if (!weatherResponse.data.fact) {
              throw new Error("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.");
            }

            setWeatherData(weatherResponse.data);
          },
          (error) => {
            console.error(error);
          }
        );
      } catch (err) {
        console.error(err);
        setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.");
      } finally {
        setLoading(false);
      }
    }

    fetchAllData();
  }, []);

  // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –≤ LocalStorage
  useEffect(() => {
    try {
      localStorage.setItem(TASKS_STORAGE_KEY, JSON.stringify(todos)); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
    } catch (error) {
      console.error(
        "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á –≤ localStorage:",
        error.message
      );
    }
  }, [todos]); // —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ tasks

  const addTask = (userInput) => {
    if (userInput) {
      const newItem = {
        id: Math.random().toString(36).substr(2, 9),
        task: userInput,
        complete: false,
      };
      setTodos([...todos, newItem]);
    }
  };

  const removeTask = (id) => {
    setTodos([...todos.filter((todo) => todo.id !== id)]);
  };

  const handleToggle = (id) => {
    setTodos([
      ...todos.map((task) =>
        task.id === id ? { ...task, complete: !task.complete } : { ...task }
      ),
    ]);
  };

  return (
    <>
      <div className="App">
        {/* // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ (loading): –ø—Ä–∏ loading === true,
        –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ "–ó–∞–≥—Ä—É–∑–∫–∞..." */}
        {loading && <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>}
        {/* // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å (!loading), –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏
        (error), –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã–≤–æ–¥–∏–º –µ—ë –∫—Ä–∞—Å–Ω—ã–º —Ü–≤–µ—Ç–æ–º. */}
        {!loading && error && <p style={{ color: "red" }}>{error}</p>}
        {/* // –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ –Ω–µ—Ç, –≤—ã–≤–æ–¥–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –ø–æ–ª—É—á–µ–Ω–Ω–∞—è –∏–∑ api */}
        {!loading && !error && (
          <>
            <div className="info">
              {/* // –ë–ª–æ–∫ money —Å —Ç–µ–∫—É—â–∏–º–∏ –∫—É—Ä—Å–∞–º–∏ USD –∏ EUR */}
              <div className="money">
                <div id="USD">–î–æ–ª–ª–∞—Ä –°–®–ê $ ‚Äî {rates.USDrate} —Ä—É–±.</div>
                <div id="EUR">–ï–≤—Ä–æ ‚Ç¨ ‚Äî {rates.EURrate} —Ä—É–±.</div>
              </div>
              {/* // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ (weatherData), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ —Å
              –ø–æ–≥–æ–¥–æ–π: –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –≤–æ–∑–¥—É—Ö–∞ –≤ –ø–µ—Ä–µ–≤–æ–¥–µ –Ω–∞ –≥—Ä–∞–¥—É—Å—ã –ø–æ
              –¶–µ–ª—å—Å–∏—é, —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞, –ø—Ä–æ—Ü–µ–Ω—Ç –æ–±–ª–∞—á–Ω–æ—Å—Ç–∏ –∏ –∏–∫–æ–Ω–∫—É –ø–æ–≥–æ–¥—ã —Å
              –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º */}
              {weatherData && (
                <div className="weather-info">
                  <div>
                    –ü–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è: <br></br> üå°Ô∏è{" "}
                    {weatherData.fact.temp.toFixed(1)}¬∞C ‡ºÑ.¬∞{" "}
                    {weatherData.fact.wind_speed} –º/—Å ‚òÅÔ∏è{" "}
                    {Math.round(weatherData.fact.cloudness * 100)}%
                  </div>
                  <img
                    className="weather-icon"
                    src={`https://yastatic.net/weather/i/icons/funky/dark/${weatherData.fact.icon}.svg`}
                    alt="–ò–∫–æ–Ω–∫–∞ –ø–æ–≥–æ–¥—ã"
                  />
                </div>
              )}
            </div>
          </>
        )}
        {/* // –ó–∞–≥–æ–ª–æ–≤–æ—á–Ω–∞—è —Å–µ–∫—Ü–∏—è header —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º 
        –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–ª*/}
        <header>
          <h1 className="list-header">–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á: {todos.length}</h1>
        </header>
        {/* // –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á ToDoForm, –ø–µ—Ä–µ–¥–∞—é—â–∞—è –º–µ—Ç–æ–¥ addTask –≤ –∫–∞—á–µ—Å—Ç–≤–µ
        –ø—Ä–æ–ø—Å–∞ */}
        <ToDoForm addTask={addTask} />
        {/* // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–¥–∞—á Todo, —Å–æ–∑–¥–∞–≤–∞–µ–º—ã–µ —Ü–∏–∫–ª–æ–º map –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        –º–∞—Å—Å–∏–≤–∞ todos */}
        {todos.map((todo) => {
          return (
            <ToDo
              todo={todo}
              key={todo.id}
              toggleTask={handleToggle}
              removeTask={removeTask}
            />
          );
        })}
      </div>
    </>
  );
}

export default App;
